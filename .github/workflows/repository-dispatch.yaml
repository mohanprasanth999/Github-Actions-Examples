name: Pull & Deploy - DEV
env:
  name: dev
on:
  repository_dispatch:
    types:
      - test
permissions:
  contents: 'read'
  id-token: 'write'
jobs:
  extract-payload-information:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      PROJECT_ID: ${{ steps.set-matrix.outputs.PROJECT_ID }}
      BUCKET_NAME: ${{ steps.set-matrix.outputs.BUCKET_NAME }}
      APP_NAME: ${{ steps.set-matrix.outputs.APP_NAME }}
      VERSION: ${{ steps.set-matrix.outputs.VERSION }}
      NODE_VERSION: ${{ steps.set-matrix.outputs.NODE_VERSION }}
      REPOSITORY_PATH: ${{ steps.set-matrix.outputs.REPOSITORY_PATH }}
      PACKAGE_VERSION: ${{ steps.set-matrix.outputs.PACKAGE_VERSION }}
      CURRENT_ENV: ${{ steps.set-matrix.outputs.CURRENT_ENV }}
    steps:
      - name: Checkout main repository code
        uses: actions/checkout@v3
      - name: Read payload and set matrix
        id: set-matrix
        run: |
          MATRIX=${{ toJson(github.event.client_payload.artefact.flavours) }}
          echo "matrix=${MATRIX}" >> $GITHUB_OUTPUT
          echo "PROJECT_ID=${{ github.event.client_payload.PROJECT_ID }}" >> $GITHUB_OUTPUT
          echo "BUCKET_NAME=${{ github.event.client_payload.BUCKET_NAME }}" >> $GITHUB_OUTPUT
          echo "APP_NAME=${{ github.event.client_payload.APP_NAME }}" >> $GITHUB_OUTPUT
          echo "VERSION=${{ github.event.client_payload.VERSION }}" >> $GITHUB_OUTPUT
          echo "NODE_VERSION=${{ github.event.client_payload.NODE_VERSION }}" >> $GITHUB_OUTPUT
          echo "REPOSITORY_PATH=${{ github.event.client_payload.REPOSITORY_PATH }}" >> $GITHUB_OUTPUT
          echo "PACKAGE_VERSION=${{ github.event.client_payload.PACKAGE_VERSION }}" >> $GITHUB_OUTPUT
          echo "CURRENT_ENV=${{ env.name }}/deploy" >> $GITHUB_OUTPUT
