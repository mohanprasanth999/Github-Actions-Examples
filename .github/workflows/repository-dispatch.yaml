name: Pull & Deploy - DEV
env:
  name: dev
on:
  repository_dispatch:
    types:
      - test
permissions:
  contents: 'read'
  id-token: 'write'
jobs:
  extract-payload-information:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-variables.outputs.matrix }}
      PROJECT_ID: ${{ steps.set-variables.outputs.PROJECT_ID }}
      BUCKET_NAME: ${{ steps.set-variables.outputs.BUCKET_NAME }}
      APP_NAME: ${{ steps.set-variables.outputs.APP_NAME }}
      VERSION: ${{ steps.set-variables.outputs.VERSION }}
      NODE_VERSION: ${{ steps.set-variables.outputs.NODE_VERSION }}
      REPOSITORY_PATH: ${{ steps.set-variables.outputs.REPOSITORY_PATH }}
      PACKAGE_VERSION: ${{ steps.set-variables.outputs.PACKAGE_VERSION }}
      CURRENT_ENV: ${{ steps.set-variables.outputs.CURRENT_ENV }}
    steps:
      - name: Checkout main repository code
        uses: actions/checkout@v3
      - name: Create Check Run
        id: create_check
        run: |
          CHECK_PAYLOAD=`printf '{"name": "%s", "head_sha": "%s", "status": "in_progress"}' "${{ github.event.client_payload.artefact.unique_id }}" "${{ github.sha }}"`
          CHECK_RESULT=$(curl -s -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/check-runs \
          -d "${CHECK_PAYLOAD}")
          echo "Check run created"
        shell: bash
      - name: Read payload and set matrix
        id: set-variables
        run: |
          echo "Starting to set other variables"
          echo "PROJECT_ID=${{ github.event.client_payload.artefact.dev.projectid }}" >> $GITHUB_OUTPUT
          echo "BUCKET_NAME=${{ github.event.client_payload.artefact.dev.bucketname }}" >> $GITHUB_OUTPUT
          echo "APP_NAME=${{ github.event.client_payload.artefact.app_name }}" >> $GITHUB_OUTPUT
          echo "VERSION=${{ github.event.client_payload.artefact.version }}" >> $GITHUB_OUTPUT
          echo "NODE_VERSION=${{ github.event.client_payload.artefact.node_version }}" >> $GITHUB_OUTPUT
          echo "REPOSITORY_PATH=${{ github.event.client_payload.artefact.repository_path }}" >> $GITHUB_OUTPUT
          echo "PACKAGE_VERSION=${{ github.event.client_payload.artefact.version }}" >> $GITHUB_OUTPUT
          echo "CURRENT_ENV=\"${{ env.name }}/deploy\"" >> $GITHUB_OUTPUT
          echo "setting matrix"
          MATRIX=$(echo '${{ toJson(github.event.client_payload.artefact.flavours) }}' | jq -c '[.[] | select(.to_deploy == true)]')
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
  print-outputs:
    needs: 
    - extract-payload-information
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flavour-info: ${{ fromJson(needs.extract-payload-information.outputs.matrix) }}
    steps:
      - name: print outputs
        run: |
          echo "printing all variables"
          echo ${{ fromJson(needs.extract-payload-information.outputs.CURRENT_ENV) }}
      - name: Update Check Run
        run: |
          CHECK_PAYLOAD=`printf '{"conclusion": "success", "completed_at": "%s", "status": "completed"}' "$(date -u +"%Y-%m-%dT%H:%M:%SZ")"`
          curl -X PATCH https://api.github.com/repos/${{ github.repository }}/check-runs/${{ secrets.check_run_id }} \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d "$CHECK_PAYLOAD"
        shell: bash


