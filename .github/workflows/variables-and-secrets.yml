##################ENV VARIABLES AND SECRETS AT REPOSITORY LEVEL##############################

name: Exploring Variables and Secrets

#on: push
on:
    schedule:
    - cron: '*/1 * * * *'

env:
    CONTAINER_REGISTRY: docker.io
    IMAGE_NAME: GA-Nginx

jobs:
    docker:
        runs-on: ubuntu-latest
        steps:
        - name: Docker Build
          run: echo docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest #2 ways to use variables

        - name: Docker Login
          run: echo docker login --username=${{ vars.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
        
        - name: Docker Publish
          run: echo docker push ${{ env.CONTAINER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
    
    deploy:
        needs: docker
        concurrency:
            group: production-deployment
            cancel-in-progress: true
        runs-on: ubuntu-latest
        steps:
        - name: Docker run
          run: |
            echo docker run -d -p 8080:80  $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
            sleep 100s



##################ENV VARIABLES AT WORKFLOW LEVEL##############################

# name: Exploring Variables and Secrets
# env:
#     CONTAINER_REGISTRY: docker.io
#     DOCKER_USERNAME: mohan
#     IMAGE_NAME: GA-Nginx
# on: push

# jobs:
#     docker:
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Build
#           run: echo docker build -t ${{ env.CONTAINER_REGISTRY }}/$DOCKER_USERNAME/$IMAGE_NAME:latest #2 ways to use variables

#         - name: Docker Login
#           env:
#             DOCKER_PASSWORD: password!321
#           run: echo docker login --username=$DOCKER_USERNAME --password=DOCKER_PASSWORD
        
#         - name: Docker Publish
#           run: echo docker push ${{ env.CONTAINER_REGISTRY }}/$DOCKER_USERNAME/$IMAGE_NAME:latest
    
#     deploy:
#         needs: docker
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker run
#           run: echo docker run -d -p 8080:80  $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

##################ENV VARIABLES AT JOB LEVEL##############################

# name: Exploring Variables and Secrets

# on: push

# jobs:
#     docker:
#         env:
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: mohan
#             IMAGE_NAME: GA-Nginx
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Build
#           run: echo docker build -t ${{ env.CONTAINER_REGISTRY }}/$DOCKER_USERNAME/$IMAGE_NAME:latest #2 ways to use variables

#         - name: Docker Login
#           env:
#             DOCKER_PASSWORD: password!321
#           run: echo docker login --username=$DOCKER_USERNAME --password=DOCKER_PASSWORD
        
#         - name: Docker Publish
#           run: echo docker push ${{ env.CONTAINER_REGISTRY }}/$DOCKER_USERNAME/$IMAGE_NAME:latest
    
#     deploy:
#         needs: docker
#         env:
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: mohan
#             IMAGE_NAME: GA-Nginx
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker run
#           run: echo docker run -d -p 8080:80  $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest




##################ENV VARIABLES AT STEP LEVEL##############################

# name: Exploring Variables and Secrets

# on: push

# jobs:
#     docker:
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Build
#           env:
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: mohan
#             IMAGE_NAME: GA-Nginx
#           run: echo docker build -t ${{ env.CONTAINER_REGISTRY }}/$DOCKER_USERNAME/$IMAGE_NAME:latest #2 ways to use variables

#         - name: Docker Login
#           env:
#             DOCKER_USERNAME: mohan
#             DOCKER_PASSWORD: password!321
#             IMAGE_NAME: GA-Nginx
#           run: echo docker login --username=$DOCKER_USERNAME --password=DOCKER_PASSWORD
        
#         - name: Docker Publish
#           env:
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: mohan
#             IMAGE_NAME: GA-Nginx
#           run: echo docker push ${{ env.CONTAINER_REGISTRY }}/$DOCKER_USERNAME/$IMAGE_NAME:latest
    
#     deploy:
#         needs: docker
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker run
#           env:
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: mohan
#             IMAGE_NAME: GA-Nginx
#           run: echo docker run -d -p 8080:80  $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

